/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package bookStore

import java.lang.Thread

class PublishBook(bookInfo: BookInfo) {
    init {
        val kotlinProgramming = BookFactory.BookFactoryBuilder()
                .title(bookInfo.title)
                .author(bookInfo.author)
                .publisher(bookInfo.publisher)
                .price(bookInfo.price)
                .weight(bookInfo.weight)
                .numOfPage(bookInfo.numOfPage).build()
        val kotlinBasic = BookFactory.BookFactoryBuilder()
                .title(bookInfo.title)
                .author(bookInfo.author)
                .publisher(bookInfo.publisher)
                .price(bookInfo.price)
                .weight(bookInfo.weight)
                .numOfPage(bookInfo.numOfPage).build()
        val javaBasic = BookFactory.BookFactoryBuilder()
                .title(bookInfo.title)
                .author(bookInfo.author)
                .publisher(bookInfo.publisher)
                .price(bookInfo.price)
                .weight(bookInfo.weight)
                .numOfPage(bookInfo.numOfPage).build()

        // 工場で作られた本をBookStoreの在庫(data class)に一時保管
        Book(kotlinProgramming)
        Book(kotlinBasic)
        Book(javaBasic)
    }
}

fun main() {
    // 監査機関に出版したい本の情報を渡す
    BookInfo("実践プログラミング", "知らん", "秀和システム", 2800, 350.35, 187)
    BookInfo("基礎Kotlin", "美樹ちゃん", "忘れた", 2300, 104.25, 193)
    BookInfo("JAVA practice", "柴田くん", "SBCreative", 1900, 14.56, 253)

    object: Thread() {
        override fun run() {
            val consumers: MutableList<Consumer> = arrayListOf()
            consumers.add(0, Consumer("consumerA", "Tokyo Mystery"))
            consumers.add(1, Consumer("consumerS", "実践プログラミング"))
            consumers.add(2, Consumer("consumerG", "基礎Kotlin"))
            consumers.add(3, Consumer("consumerE", "Kotlinの実践"))
            consumers.add(4, Consumer("consumerJ", "JAVA practice"))

            MakeConsumer(consumers).makeConsumerThread()
        }
    }.start()
}

/**
 * 出版する本がこれでいいのか判断する監査機関
 * 目にも止まらぬ速さで監査して，直ぐに出版依頼する
 * 多分だけど，中身しっかり確認してない
 * 要はちゃんと仕事してねえ
 */
data class BookInfo(val title: String, val author: String, val publisher: String, val price: Int, val weight: Double, val numOfPage: Int) {
    init {
        PublishBook(this)
    }
}
